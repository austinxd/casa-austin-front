# Prompt para Generar Frontend de Analytics - Casa Austin
Crea un dashboard modular de analytics para Casa Austin (sistema de reservas de propiedades) que consuma 3 endpoints espec√≠ficos del backend Django. 
## Backend API Disponible
### üìä Endpoint 1: An√°lisis de B√∫squedas
**URL:** `/api/v1/stats/search-tracking/`  
**M√©todo:** GET
**Par√°metros disponibles:**
- `date_from` (YYYY-MM-DD): Fecha inicio (default: hace 30 d√≠as)
- `date_to` (YYYY-MM-DD): Fecha fin (default: hoy)
- `include_clients` (boolean): Incluir clientes registrados (default: true)
- `include_anonymous` (boolean): Incluir IPs an√≥nimas (default: true)
**Estructura de respuesta:**
```json
{
  "success": true,
  "data": {
    "period_info": {
      "date_from": "2025-08-22",
      "date_to": "2025-09-21",
      "total_days": 30
    },
    "search_summary": {
      "total_searches": 0,
      "unique_clients_searching": 0,
      "anonymous_searches": 0,
      "conversion_rate": 3.5,
      "avg_searches_per_day": 0.0
    },
    "searches_by_weekday": [...],
    "top_searched_properties": [...],
    "top_searching_clients": [...],
    "anonymous_ips_analysis": [...]
  }
}
üí∞ Endpoint 2: An√°lisis de Ingresos
URL: /api/v1/stats/ingresos/
M√©todo: GET

Par√°metros disponibles:

date_from (YYYY-MM-DD): Fecha inicio (default: hace 30 d√≠as)
date_to (YYYY-MM-DD): Fecha fin (default: hoy)
period (string): day/week/month (default: week)
currency (string): PEN/USD (default: PEN)
Estructura de respuesta:

{
  "success": true,
  "data": {
    "period_info": {...},
    "revenue_summary": {
      "total_revenue": 1550.00,
      "total_nights": 13,
      "total_reservations": 5,
      "avg_revenue_per_reservation": 310.00,
      "revenue_per_night": 119.23,
      "avg_revenue_per_day": 51.67
    },
    "revenue_by_period": [...],
    "payment_distribution": [...],
    "price_analysis": {...},
    "growth_metrics": {...}
  }
}
üìÖ Endpoint 3: Check-ins Pr√≥ximos
URL: /api/v1/upcoming-checkins/
M√©todo: GET

Par√°metros disponibles:

days_ahead (integer): D√≠as hacia adelante (default: 60)
limit (integer): M√°ximo de fechas (default: 20)
include_anonymous (boolean): Incluir b√∫squedas an√≥nimas (default: true)
Estructura de respuesta:

{
  "success": true,
  "data": {
    "period_info": {...},
    "top_upcoming_checkins": [...],
    "summary_metrics": {...}
  }
}
Requerimientos del Frontend

üì± Componentes Requeridos
1. Sidebar de Navegaci√≥n
An√°lisis de B√∫squedas
An√°lisis de Ingresos
Check-ins Pr√≥ximos
Selector de fechas global
Bot√≥n de refrescar datos
2. Dashboard de B√∫squedas 
M√©tricas principales: Total b√∫squedas, conversi√≥n, b√∫squedas por d√≠a
Gr√°fico de barras: B√∫squedas por d√≠a de la semana
Top lists: Propiedades m√°s buscadas, top clientes
Tabla: An√°lisis de IPs an√≥nimas (√∫ltimas 4 cifras)
Filtros: Incluir/excluir clientes registrados y an√≥nimos
3. Dashboard de Ingresos 
KPIs principales: Ingresos totales, RevPAR, promedio por reserva
Gr√°fico temporal: Evoluci√≥n de ingresos por per√≠odo
Distribuci√≥n: Gr√°fico de torta por m√©todos de pago
M√©tricas de crecimiento: % vs per√≠odo anterior
An√°lisis de precios: Rangos, m√≠n/m√°x, promedio por noche
4. Dashboard Check-ins 
Fechas trending: Pr√≥ximos check-ins m√°s buscados
Calendario visual: Marcadores de popularidad
M√©tricas de demanda: Inter√©s por per√≠odos espec√≠ficos
üîß Funcionalidades T√©cnicas
Gesti√≥n de Estado
Manejo de loading states para cada endpoint

Estado global para filtros de fechas
Filtros y Par√°metros
Selector de fechas: DatePicker con presets (7d, 30d, 90d, custom)
Per√≠odo: Dropdown (d√≠a/semana/mes) para ingresos
Toggles: Incluir clientes/an√≥nimos para b√∫squedas
L√≠mites: Input num√©rico para cantidad de resultados
Visualizaciones
