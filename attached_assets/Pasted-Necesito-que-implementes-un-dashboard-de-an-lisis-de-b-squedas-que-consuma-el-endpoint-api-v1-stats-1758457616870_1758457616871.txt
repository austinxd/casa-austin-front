Necesito que implementes un dashboard de an치lisis de b칰squedas que consuma el endpoint /api/v1/stats/ y muestre dos tablas principales:

游꿢 Objetivo:
Crear una p치gina de dashboard que muestre b칰squedas agrupadas por usuario:

Tabla 1: Clientes registrados (tienen client_id)
Tabla 2: Usuarios an칩nimos (agrupados por IP)
游댕 API Endpoint:
GET /api/v1/stats/?date_from=2025-09-01&date_to=2025-09-21&period=week
游늶 Estructura de datos que recibir치s:
El endpoint devuelve esta estructura JSON:

{
  "success": true,
  "stats": {
    "search_analytics": {
      "client_search_groups": {
        "top_searching_clients": [
          {
            "client_id": 123,
            "client_name": "Juan P.",
            "client_email": "juan@email.com", 
            "total_searches": 8,
            "unique_dates_searched": 5,
            "favorite_properties": [
              {"property__name": "Casa Playa", "count": 3},
              {"property__name": "Casa 1", "count": 2}
            ]
          }
        ],
        "total_clients_searching": 15
      },
      "ip_search_groups": {
        "top_searching_ips": [
          {
            "ip_address": "192.168.1.100",
            "total_searches": 12,
            "unique_dates_searched": 7,
            "different_devices": 2,
            "favorite_properties": [
              {"property__name": "Casa Playa", "count": 4}
            ]
          }
        ],
        "total_anonymous_ips": 8
      }
    }
  }
}
游꿛 Dise침o de las tablas:
Tabla 1: Clientes Registrados

Cliente	Email	Total B칰squedas	Fechas 칔nicas	Propiedades Favoritas
Juan P.	juan@email.com	8	5	Casa Playa (3), Casa 1 (2)
Tabla 2: Usuarios An칩nimos (por IP)

IP	Total B칰squedas	Fechas 칔nicas	Dispositivos	Propiedades Favoritas
192.168.1.100	12	7	2	Casa Playa (4)
游댢 Funcionalidades requeridas:
Filtros de fecha: Inputs para date_from y date_to
Selector de per칤odo: Dropdown con day, week, month
Toggle: Checkbox para include_anonymous
Ordenamiento: Poder ordenar por total de b칰squedas, fechas 칰nicas, etc.
Paginaci칩n: Para listas largas
Loading state: Mientras carga la API
Error handling: Si falla la API
游늵 Informaci칩n adicional a mostrar:
Agrega cards con m칠tricas resumidas del summary_metrics:

Total de b칰squedas
IPs 칰nicas an칩nimas
Clientes 칰nicos que buscaron
Duraci칩n promedio de estad칤a
游꿢 Ejemplo de llamada completa:
// Ejemplo de fetch
const response = await fetch('/api/v1/stats/?date_from=2025-09-01&date_to=2025-09-21&period=week&include_anonymous=true');
const data = await response.json();
// Extraer datos para las tablas
const clientData = data.stats.search_analytics.client_search_groups.top_searching_clients;
const ipData = data.stats.search_analytics.ip_search_groups.top_searching_ips;
游꿛 Estilo sugerido:
Usa un dise침o limpio y profesional
Tablas con hover effects
Colores diferenciados para clientes vs an칩nimos
Icons para representar clientes registrados vs IPs an칩nimas
Responsive design